{"ast":null,"code":"import _regeneratorRuntime from \"/home/sotatek/Music/nft-marketplace-reactjs-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/sotatek/Music/nft-marketplace-reactjs-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/home/sotatek/Music/nft-marketplace-reactjs-master/src/modules/WalletConnect/WalletConnect.jsx\";\n\nimport React from \"react\";\nimport SmallProfile from \"../Author/components/SmallProfile\";\nimport { getLocal, setLocal } from \"../../utils\";\nimport { getAddressService, requestNonceService, signMessageService, verifySignatureService } from \"./wallet.service\";\nimport { refreshBalanceService } from \"./../../utils/smartcontract\";\nimport { getUserProfileService } from \"./../Author/author.service\";\nimport './WalletConnect.css';\nimport { useQuery } from \"react-query\";\nimport { toast } from \"react-toastify\";\nexport var useProfile = function useProfile(accessToken) {\n  return useQuery([\"profile\", accessToken], getUserProfileService, {\n    enabled: !!accessToken\n  });\n};\n\nvar WalletConnect = function WalletConnect() {\n  var handleRegisterWallet = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var publicAddress, _yield$requestNonceSe, nonce, wallet_address, signature, result;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return getAddressService();\n\n            case 3:\n              publicAddress = _context.sent;\n\n              if (publicAddress) {\n                _context.next = 6;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 6:\n              _context.next = 8;\n              return requestNonceService(publicAddress);\n\n            case 8:\n              _yield$requestNonceSe = _context.sent;\n              nonce = _yield$requestNonceSe.nonce;\n              wallet_address = _yield$requestNonceSe.wallet_address;\n              _context.next = 13;\n              return signMessageService({\n                publicAddress: publicAddress,\n                nonce: nonce\n              });\n\n            case 13:\n              signature = _context.sent;\n              _context.next = 16;\n              return verifySignatureService({\n                wallet_address: wallet_address,\n                nonce: nonce,\n                signature: signature\n              });\n\n            case 16:\n              result = _context.sent;\n              setLocal({\n                name: \"accessToken\",\n                value: result.token\n              });\n              setLocal({\n                name: \"tokenExpiry\",\n                value: result.expiry\n              });\n              setLocal({\n                name: \"publicAddress\",\n                value: publicAddress\n              });\n              window.location.reload();\n              _context.next = 26;\n              break;\n\n            case 23:\n              _context.prev = 23;\n              _context.t0 = _context[\"catch\"](0);\n              toast(\"Please check your wallet and try again\");\n\n            case 26:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 23]]);\n    }));\n\n    return function handleRegisterWallet() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleClickWallet = function handleClickWallet(e) {\n    e.preventDefault();\n    handleRegisterWallet();\n  };\n\n  var accessToken = getLocal(\"accessToken\");\n\n  var _useProfile = useProfile(accessToken),\n      profile = _useProfile.data;\n\n  var _useQuery = useQuery([\"useBalance\", profile], /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return refreshBalanceService(profile.wallet_address);\n\n          case 2:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  })), {\n    enabled: !!profile,\n    retry: 1\n  }),\n      balance = _useQuery.data,\n      refetch = _useQuery.refetch;\n\n  var renderWalletButton = function renderWalletButton() {\n    if (profile && profile.wallet_address) {\n      return /*#__PURE__*/React.createElement(SmallProfile, Object.assign({\n        balance: balance,\n        onRefreshBalance: refetch\n      }, profile, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"sc-btn-top mg-r-12 show\",\n        id: \"site-header\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"sc-button header-slider style style-1 wallet fl-button pri-1\",\n        onClick: handleClickWallet,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }\n      }, \"Wallet connect\")));\n    }\n  };\n\n  return renderWalletButton();\n};\n\nexport default React.memo(WalletConnect);","map":{"version":3,"names":["React","SmallProfile","getLocal","setLocal","getAddressService","requestNonceService","signMessageService","verifySignatureService","refreshBalanceService","getUserProfileService","useQuery","toast","useProfile","accessToken","enabled","WalletConnect","handleRegisterWallet","publicAddress","nonce","wallet_address","signature","result","name","value","token","expiry","window","location","reload","handleClickWallet","e","preventDefault","profile","data","retry","balance","refetch","renderWalletButton","memo"],"sources":["/home/sotatek/Music/nft-marketplace-reactjs-master/src/modules/WalletConnect/WalletConnect.jsx"],"sourcesContent":["import React from \"react\";\nimport SmallProfile from \"../Author/components/SmallProfile\";\nimport { getLocal, setLocal } from \"../../utils\";\nimport {\n  getAddressService,\n  requestNonceService,\n  signMessageService,\n  verifySignatureService,\n} from \"./wallet.service\";\nimport { refreshBalanceService } from \"./../../utils/smartcontract\";\nimport { getUserProfileService } from \"./../Author/author.service\";\nimport './WalletConnect.css';\nimport { useQuery } from \"react-query\";\nimport { toast } from \"react-toastify\";\n\n\nexport const useProfile = (accessToken) => useQuery(\n  [\"profile\", accessToken],\n  getUserProfileService,\n  {\n    enabled: !!accessToken,\n  }\n);\n\nconst WalletConnect = () => {\n  const handleRegisterWallet = async () => {\n    try {\n      const publicAddress = await getAddressService();\n      if (!publicAddress) {\n        return;\n      }\n      const { nonce, wallet_address } = await requestNonceService(publicAddress);\n      const signature = await signMessageService({\n        publicAddress,\n        nonce,\n      });\n      const result = await verifySignatureService({\n        wallet_address,\n        nonce: nonce,\n        signature: signature,\n      });\n      setLocal({\n        name: \"accessToken\",\n        value: result.token,\n      });\n      setLocal({\n        name: \"tokenExpiry\",\n        value: result.expiry,\n      });\n      setLocal({\n        name: \"publicAddress\",\n        value: publicAddress,\n      });\n      window.location.reload();\n    } catch (e) {\n      toast(\"Please check your wallet and try again\");\n    }\n  };\n\n  const handleClickWallet = (e) => {\n    e.preventDefault();\n    handleRegisterWallet();\n  };\n\n  const accessToken = getLocal(\"accessToken\");\n  const { data: profile } = useProfile(accessToken);\n\n  const { data: balance, refetch } = useQuery(\n    [\"useBalance\", profile],\n    async () => await refreshBalanceService(profile.wallet_address),\n    {\n      enabled: !!profile,\n      retry: 1,\n    }\n  );\n\n  const renderWalletButton = () => {\n    if (profile && profile.wallet_address) {\n      return (\n        <SmallProfile\n          balance={balance}\n          onRefreshBalance={refetch}\n          {...profile}\n        />\n      );\n    } else {\n      return (\n        <div className=\"sc-btn-top mg-r-12 show\" id=\"site-header\">\n          <button\n            className=\"sc-button header-slider style style-1 wallet fl-button pri-1\"\n            onClick={handleClickWallet}>\n            <span>Wallet connect</span>\n          </button>\n        </div>\n      );\n    }\n  };\n  return renderWalletButton();\n};\n\nexport default React.memo(WalletConnect);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}