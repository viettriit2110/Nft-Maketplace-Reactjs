{"ast":null,"code":"import _regeneratorRuntime from \"/home/sotatek/Music/nft-marketplace-reactjs-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/sotatek/Music/nft-marketplace-reactjs-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axiosInstance from \"../../utils/apiRequest\";\nimport { toast } from 'react-toastify';\nimport Web3 from \"web3\";\nvar web3;\nexport var requestNonceService = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(address) {\n    var _yield$axiosInstance$, data, _data$data, nonce, wallet_address;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axiosInstance.get(\"\".concat(API, \"/auth/nonce?address=\").concat(address));\n\n          case 2:\n            _yield$axiosInstance$ = _context.sent;\n            data = _yield$axiosInstance$.data;\n            _context.prev = 4;\n            _data$data = data.data, nonce = _data$data.nonce, wallet_address = _data$data.wallet_address;\n            return _context.abrupt(\"return\", {\n              nonce: nonce,\n              wallet_address: wallet_address\n            });\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](4);\n            console.log(_context.t0);\n            throw new Error(\"Cannot get nonce with your wallet\");\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[4, 9]]);\n  }));\n\n  return function requestNonceService(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var verifySignatureService = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(params) {\n    var _yield$axiosInstance$2, data;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return axiosInstance.post(\"\".concat(API, \"/auth/verify_signature\"), JSON.stringify(params));\n\n          case 2:\n            _yield$axiosInstance$2 = _context2.sent;\n            data = _yield$axiosInstance$2.data;\n            return _context2.abrupt(\"return\", data.data);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function verifySignatureService(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var getAddressService = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n    var coinbase, publicAddress;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (window.ethereum) {\n              _context3.next = 4;\n              break;\n            }\n\n            window.log(\"Please install or enable MetaMask first.\");\n            toast(\"Please install or enable MetaMask.\", {\n              delay: 1000\n            });\n            return _context3.abrupt(\"return\", '');\n\n          case 4:\n            if (web3) {\n              _context3.next = 16;\n              break;\n            }\n\n            _context3.prev = 5;\n            _context3.next = 8;\n            return window.ethereum.enable();\n\n          case 8:\n            web3 = new Web3(window.ethereum);\n            _context3.next = 16;\n            break;\n\n          case 11:\n            _context3.prev = 11;\n            _context3.t0 = _context3[\"catch\"](5);\n            toast(\"You need to allow MetaMask.\");\n            window.log(\"You need to allow MetaMask.\", _context3.t0);\n            return _context3.abrupt(\"return\", '');\n\n          case 16:\n            _context3.next = 18;\n            return web3.eth.getCoinbase();\n\n          case 18:\n            coinbase = _context3.sent;\n\n            if (coinbase) {\n              _context3.next = 22;\n              break;\n            }\n\n            console.log(\"Please activate MetaMask.\");\n            return _context3.abrupt(\"return\", '');\n\n          case 22:\n            _context3.next = 24;\n            return coinbase.toLowerCase();\n\n          case 24:\n            publicAddress = _context3.sent;\n            return _context3.abrupt(\"return\", publicAddress);\n\n          case 26:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[5, 11]]);\n  }));\n\n  return function getAddressService() {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var signMessageService = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(_ref4) {\n    var publicAddress, nonce, signature;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            publicAddress = _ref4.publicAddress, nonce = _ref4.nonce;\n            _context4.prev = 1;\n            _context4.next = 4;\n            return web3.eth.personal.sign(\"\".concat(nonce), publicAddress, \"\");\n\n          case 4:\n            signature = _context4.sent;\n            return _context4.abrupt(\"return\", signature);\n\n          case 8:\n            _context4.prev = 8;\n            _context4.t0 = _context4[\"catch\"](1);\n            console.log(_context4.t0);\n            throw new Error(\"You need to sign the message to be able to log in.\");\n\n          case 12:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[1, 8]]);\n  }));\n\n  return function signMessageService(_x3) {\n    return _ref5.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["axiosInstance","toast","Web3","web3","requestNonceService","address","get","API","data","nonce","wallet_address","console","log","Error","verifySignatureService","params","post","JSON","stringify","getAddressService","window","ethereum","delay","enable","eth","getCoinbase","coinbase","toLowerCase","publicAddress","signMessageService","personal","sign","signature"],"sources":["/home/sotatek/Music/nft-marketplace-reactjs-master/src/modules/WalletConnect/wallet.service.js"],"sourcesContent":["import axiosInstance from \"../../utils/apiRequest\";\nimport { toast } from 'react-toastify';\nimport Web3 from \"web3\";\nlet web3;\n\nexport const requestNonceService = async (address) => {\n  const { data } = await axiosInstance.get(\n    `${API}/auth/nonce?address=${address}`\n  );\n  try {\n    const { nonce, wallet_address } = data.data;\n    return { nonce, wallet_address };\n  } catch (error) {\n    console.log(error);\n    throw new Error(\"Cannot get nonce with your wallet\");\n  }\n};\nexport const verifySignatureService = async (params) => {\n  const { data } = await axiosInstance.post(\n    `${API}/auth/verify_signature`,\n    JSON.stringify(params)\n  );\n  return data.data;\n};\n\nexport const getAddressService = async () => {\n  if (!window.ethereum) {\n    window.log(\"Please install or enable MetaMask first.\");\n    toast(\"Please install or enable MetaMask.\", { delay: 1000 });\n    return '';\n  }\n\n  if (!web3) {\n    try {\n      await window.ethereum.enable();\n      web3 = new Web3(window.ethereum);\n    } catch (error) {\n      toast(\"You need to allow MetaMask.\");\n      window.log(\"You need to allow MetaMask.\", error);\n      return '';\n    }\n  }\n  const coinbase = await web3.eth.getCoinbase();\n  if (!coinbase) {\n    console.log(\"Please activate MetaMask.\");\n    return '';\n  }\n  const publicAddress = await coinbase.toLowerCase();\n  // const bigBalance = await web3.eth.getBalance(publicAddress);\n  // const balance = web3.utils.fromWei(bigBalance, \"ether\");\n  return publicAddress;\n};\n\nexport const signMessageService = async ({ publicAddress, nonce }) => {\n  try {\n    const signature = await web3.eth.personal.sign(\n      `${nonce}`,\n      publicAddress,\n      \"\"\n    );\n    return signature;\n  } catch (error) {\n    console.log(error);\n    throw new Error(\"You need to sign the message to be able to log in.\");\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}